{"componentChunkName":"component---src-app-pages-til-page-index-tsx","path":"/tils/dev/devops/kubernetes/Observability","result":{"pageContext":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Observability\"), mdx(\"h1\", null, \"Table of Contents\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#ReadinessLiveness\"\n  }), \"Readiness and Liveness Probes\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#ContainerLogging\"\n  }), \"Container Logging\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#MonitorDebug\"\n  }), \"Monitor and Debug Applications\"))), mdx(\"h2\", null, \"What is?\", mdx(\"a\", {\n    name: \"What\"\n  })), mdx(\"p\", null, \"Pod status: where the pod is in its lifecycle  first creasted Pxending scheudlre tries to place the pod\"), mdx(\"p\", null, \"run \"), mdx(\"p\", null, \"once scheduled, goes to \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Container Creating\"), \" state\"), mdx(\"p\", null, \"then \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Running\")), mdx(\"p\", null, \"Pod condition: PodScheduled, Initialized, CiontasinersReady, REady\"), mdx(\"p\", null, \"look for conditions section\"), mdx(\"p\", null, \"Ready condition: running and ready to accept user traffic\"), mdx(\"p\", null, \"application inside the container is running or not?\"), mdx(\"p\", null, \"why does it matter if the state is expoesed incoreectly\"), mdx(\"p\", null, \"when container creasted-> ready\"), mdx(\"p\", null, \"but\"));\n}\n;\nMDXContent.isMDXComponent = true;","toc":{"items":[{"url":"#observability","title":"Observability"},{"url":"#table-of-contents","title":"Table of Contents","items":[{"url":"#what-isa-namewhat-","title":"What is?<a name=\"What\" />"}]}]},"name":"Observability"}},"staticQueryHashes":["1694686584","3368942263"]}