{"componentChunkName":"component---src-app-pages-til-page-index-tsx","path":"/tils/dev/devops/kubernetes/Services","result":{"pageContext":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Services\"), mdx(\"h1\", null, \"Table of Contents\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#What\"\n  }), \"What is?\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#DefiningService\"\n  }), \"Defining a Service\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#ServiceTypes\"\n  }), \"Service Types\"))), mdx(\"h2\", null, \"What is?\", mdx(\"a\", {\n    name: \"What\"\n  })), mdx(\"p\", null, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Service\"), \" is an abstract way to expose an appliation running on a set of \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Pods\"), \" as a \", mdx(\"b\", null, \"network service\"), \".\\nIn kubernetes, pods are often destroyed and created. Thus, networking via ip addresses of pods is insecure in terms of availability and scalability.\\nThus, \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"services\"), \" are used to enable stable networking communication between the client and the server.\"), mdx(\"h2\", null, \"Defining a Service\", mdx(\"a\", {\n    name: \"DefiningService\"\n  })), mdx(\"p\", null, \"The name of the Service object must be a valid \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#dns-label-names\"\n  }), \"DNS label name\"), \".\"), mdx(\"p\", null, \"Following is an example of service, written in YAML file.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-text\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"----------------\\nservice-example.yaml\\n----------------\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: my-service\\nspec:\\n  # By default, the type of the Service is ClusterIP. This is dealt in the later section of this article.\\n  type: NodePort\\n  selector: \\n    app: MyApp\\n  ports:\\n    - portocol: TCP\\n      port: 80\\n      targetPort: 80\\n\"))), mdx(\"h2\", null, \"Service Types\", mdx(\"a\", {\n    name: \"ServiceTypes\"\n  })), mdx(\"p\", null, \"Kubernetes \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Service Type\"), \" allows user to specify what kind of Service is desired. Default is \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"ClusterIP\"), \".\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"ClusterIP\"), \": Exposes the service on a cluster-internal IP address. Choosing this value makes the service only reachable from within the cluster.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"NodePort\"), \": Exposes the service on each Nodes' IP as a static port. In this case, a \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"ClusterIP\"), \" Service to which the \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"NodePort\"), \" routes is automatically created.\\nUser is able to connect to the service via \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"[NodeIP]:[NodePortIP]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"LoadBalancer\"), \": Exposes the Service externally using a cloud provider's load balancer(such as EKS, Azure or GKE). NodePort and ClusterIP Services, to which the external load balancer routes, are automatically created.\")), mdx(\"p\", null, \"Below is an example of \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"NodePort\"), \" Service.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-text\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"apiVersion: v1\\nkind: Service\\nmetadata:\\n  name: my-service\\nspec:\\n  type: NodePort\\n  selector:\\n    app: MyApp\\n  ports:\\n      # By default and for convenience, the `targetPort` is set to the same value as the `port` field.\\n    - port: 80\\n      targetPort: 80\\n      # Optional field\\n      # By default and for convenience, the Kubernetes control plane will allocate a port from a range (default: 30000-32767)\\n      nodePort: 30007\"))), mdx(\"p\", null, \"Below is an example of \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"LoadBalancer\"), \" Service.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-text\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"apiVersion: v1\\nkind: Service\\nmetadata:\\n  name: my-service\\nspec:\\n  selector:\\n    app: MyApp\\n  ports:\\n    - protocol: TCP\\n      port: 80\\n      targetPort: 9376\\n  clusterIP: 10.0.171.239\\n  type: LoadBalancer\\nstatus:\\n  loadBalancer:\\n    ingress:\\n    - ip: 192.0.2.127\"))));\n}\n;\nMDXContent.isMDXComponent = true;","toc":{"items":[{"url":"#services","title":"Services"},{"url":"#table-of-contents","title":"Table of Contents","items":[{"url":"#what-isa-namewhat-","title":"What is?<a name=\"What\" />"},{"url":"#defining-a-servicea-namedefiningservice-","title":"Defining a Service<a name=\"DefiningService\" />"},{"url":"#service-typesa-nameservicetypes-","title":"Service Types<a name=\"ServiceTypes\" />"}]}]},"name":"Services"}},"staticQueryHashes":["1694686584","3368942263"]}