{"componentChunkName":"component---src-app-pages-til-page-index-tsx","path":"/tils/dev/backend/caching/caching","result":{"pageContext":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Keys\"), mdx(\"h1\", null, \"Table of contents\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#CachingStrategy\"\n  }), \"Caching Strategies\"), mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#CacheAside\"\n  }), \"Cache Aside\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#ReadThrough\"\n  }), \"Read Through\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#WriteThrough\"\n  }), \"Write Through\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#WriteBehind\"\n  }), \"Write Behind\")))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#EvictionPolicy\"\n  }), \"Eviction Policies\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#Redis\"\n  }), \"Redis\"))), mdx(\"h2\", null, \"Caching Strategy\", mdx(\"a\", {\n    name: \"CachingStrategy\"\n  })), mdx(\"p\", null, \"Caching has four known strategies:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cache Aside\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Read Through\")), mdx(\"h3\", null, \"Cache Aside\", mdx(\"a\", {\n    name: \"CacheAside\"\n  })), mdx(\"p\", null, \"access to cache and storage\\ncheck key in cache, if not fetch from storage. ex. redis\"), mdx(\"p\", null, \"cache only what's needed\"), mdx(\"p\", null, \"cache misses are expensive\\ndata staleness\\nimplementation complexity\"), mdx(\"h3\", null, \"Read Through\", mdx(\"a\", {\n    name: \"ReadThrough\"\n  })), mdx(\"p\", null, \"application x access to storage.\"), mdx(\"p\", null, \"cache only what's needed, transparent\"), mdx(\"p\", null, \"cache misses\"), mdx(\"h3\", null, \"Write Through\", mdx(\"a\", {\n    name: \"WriteThrough\"\n  })), mdx(\"p\", null, \"up to date data\"), mdx(\"p\", null, \"writes expensive\\nredundant data\"), mdx(\"h3\", null, \"Write Behind\", mdx(\"a\", {\n    name: \"WriteBehind\"\n  })), mdx(\"p\", null, \"no write penalty\\nreduced load on storage\"), mdx(\"p\", null, \"reliability\"), mdx(\"p\", null, \"lack of consistency\"), mdx(\"p\", null, \"###2. \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#EvictionPolicy\"\n  }), \"Eviction Policies\")), mdx(\"p\", null, \"LRU (least recently used) based on linked list\\nhas limitation\\nto solve it use\"), mdx(\"p\", null, \"LFU (least frequently used)\"), mdx(\"p\", null, \"lru as default\\nfaster, cheaper\\nsuffer less from false cache eviction\"), mdx(\"h2\", null, \"Redis\", mdx(\"a\", {\n    name: \"Redis\"\n  })), mdx(\"p\", null, \"In memory key value store\"), mdx(\"p\", null, \"support ttl\"), mdx(\"p\", null, \"persistance\\nsave data to disk\\nredis crash -> recover from disk\\nwhy not use it as db?\\npersist\\ncan loose recent data\\nstore in memory\\nremote service, latency\"));\n}\n;\nMDXContent.isMDXComponent = true;","toc":{"items":[{"url":"#keys","title":"Keys"},{"url":"#table-of-contents","title":"Table of contents","items":[{"url":"#caching-strategya-namecachingstrategya","title":"Caching Strategy<a name=\"CachingStrategy\"></a>","items":[{"url":"#cache-asidea-namecacheasidea","title":"Cache Aside<a name=\"CacheAside\"></a>"},{"url":"#read-througha-namereadthrougha","title":"Read Through<a name=\"ReadThrough\"></a>"},{"url":"#write-througha-namewritethrougha","title":"Write Through<a name=\"WriteThrough\"></a>"},{"url":"#write-behinda-namewritebehinda","title":"Write Behind<a name=\"WriteBehind\"></a>"}]},{"url":"#redisa-nameredisa","title":"Redis<a name=\"Redis\"></a>"}]}]},"name":"caching"}},"staticQueryHashes":["1694686584","3368942263"]}